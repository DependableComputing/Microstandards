<?xml version="1.0" encoding="UTF-8"?>
<argument>
  <properties>
    <title>
      <![CDATA[New Argument]]>
    </title>
    <author>
      <![CDATA[]]>
    </author>
    <version>
      <![CDATA[]]>
    </version>
    <date>
      <![CDATA[]]>
    </date>
    <status>
      <![CDATA[]]>
    </status>
    <prefix>
      <![CDATA[]]>
    </prefix>
    <confidence>
      <![CDATA[false]]>
    </confidence>
    <note>
      <![CDATA[]]>
    </note>
  </properties>

  <gsn>
    <g
        id="__gsn__17702c644ee"
        color="#ffffff"
        name="Correctness">
      The prime software module {-M-} {implementation} is correct and complete with respect to the defined {interface contracts} under foreseeable operating conditions.

      <c
          id="__gsn__17efdf877d2"
          color="#ffffff"
          name="[correctness]">
        The {implementation} is correct with respect to its {defined intended behavior}, under {foreseeable operating conditions}.
      </c>

      <s
          id="__gsn__17791afde84"
          color="#ffffff"
          name="Strategy">
        By showing that all {interface contract} guarantees are satisfied by a set of properties against the reengineered module. Those properties are verified indirectly agains the formal specification or directly against the source code.

        <c
            id="__gsn__17702c7d692"
            name="[formal specification]">
          A specification for which all elements are mathematically defined.
        </c>

        <c
            id="__gsn__17791b3e504"
            color="#ffffff"
            name="[PVS formal specification]">
          A specification in PVS consisting of an operational specification of the software module, axioms, and theorems and lemmas over the operational specification and other theorems and lemmas.
        </c>

        <c
            id="__gsn__17702c7d694"
            name="[derived source code implementation]">
          A {source code implementation} generated by a well-defined software synthesis mechanism.

          <c
              id="__gsn__17702c7d695"
              color="#ffffff"
              name="[source code implementation]">
            An implementation of software that is stated in a source code language that is either compiled or interpreted to operate in an executable hardware environment.
          </c>
        </c>

        <j
            id="__gsn__17ebc5a2144"
            color="#ffffff"
            name="Justification">
          There will be some properties that it is easier to prove than, for example, to test (due to problems of state space size, for example). There will be many other properties that are easier to test than prove. Therefore, we must assume that properties from formal specification and testing, together, imply specification and we try to have as much overlap (redundancy) in verified properties as is cost-feasible.
        </j>

        <a
            id="__gsn__17ec0b4d996"
            color="#ffffff"
            name="Assumption">
          All {interface contract} assumptions hold at their respective interface points.
        </a>

        <g
            id="__gsn__17ebd4cb5ed"
            color="#ffffff"
            name="Implied Contract Guarantees">
          Each guarantee of each {interface contract} of the {prime software module} is implied to hold by a set of the properties of the software module and the assumptions of each respective interface contract.

          <g
              id="__gsn__17ecb21c66d"
              color="#ffffff"
              name="Completeness">
            All contract guarantees of all contracts mapped to sufficiently implying properties.

            <e
                id="__gsn__17ecb22828a"
                color="#ffffff"
                name="Interface Point Sign-Off">
              Sign-off from the team lead indicating that each interface point's contract has been fully represented and analyzed for sufficient implicating properties. See "evidence-fre.xlsx#Contract Verification#Interface Point Sign-Off"
            </e>
          </g>

          <g
              id="__gsn__17ecb23768a"
              color="#ffffff"
              name="Adequate Property Implications">
            Each contract guarantee of each contract has adequate implicating properties defined.

            <e
                id="__gsn__17ebd4e4628"
                color="#ffffff"
                name="Implication Reasoning">
              For the reader's inspection, the implication reasoning foreach contract guarantee of each interface contract. See "evidence-fre.xslx#Contract Verification#Implication Reasoning".
            </e>

            <e
                id="__gsn__17ebd4e609e"
                color="#ffffff"
                name="Implication Reasoning Sign-Off">
              Sign-off from the team lead indicating that the verification team agrees with the rationale implicating each {guarantee term} of each {interface contract}. See "evidence-fre.xlsx#Contract Verification#Implication Reasoning Sign-Off"
            </e>
          </g>

          <comment
              id="__gsn__17ec0b7415d"
              color="#ffffff"
              name="Comment">
            Perhaps an entire microstandard could be devoted to this problem.
          </comment>
        </g>

        <g
            id="__gsn__17ebc912911"
            color="#ffffff"
            name="Verified Properties">
          All of the properties used to imply {interface contract} guarantees are sufficiently verified on the prime software module.

          <c
              id="__gsn__17ec0b79f60"
              color="#ffffff"
              name="Note">
            Properties do not include explicit assumptions of the {interface contract}s.
          </c>

          <s
              id="__gsn__17ebc9192be"
              color="#ffffff"
              name="Strategy">
            By showing that the all required properties are {adequately verified} in the union of properties verified indirectly against the formal specification and directly against the source code.

            <c
                id="__gsn__17ec0b8b0fe"
                color="#ffffff"
                name="[adequately verified]">
              Having been verified to an extent that is practicable with available verification and validation methods that is deemed acceptable for the criticality level of target systems.
            </c>

            <c
                id="__gsn__17ec0baac08"
                color="#ffffff"
                name="Overlap">
              The set of properties proven indirectly from the formal specification, and the set of properties proven directly from the source code can overlap as needed.
            </c>

            <g
                id="__gsn__17ed02a43dc"
                color="#ffffff"
                name="Property Verification Coverage">
              All properties are covered by verification. Each property is verified either indirectly on the specification, directly on source code, or both.

              <e
                  id="__gsn__17ed02acfb7"
                  color="#ffffff"
                  name="Per Property Property Verification Coverage Check">
                Each property is covered by verification against specification or verification against source code. See "evidence-fre.xlsx!Contract Verification#Property Verification Coverage"
              </e>
            </g>

            <g
                id="__gsn__17ebc91eb8d"
                color="#ffffff"
                name="Indirect Verified Properties">
              A subset of the properties are adequately indirectly verified from the formal specification of the prime software module.

              <s
                  id="__gsn__17ebc955713"
                  color="#ffffff"
                  name="Strategy">
                By showing that the properties transitively are {adequately correct} on the implementation because they are verified on the specification, and because of the nature of the implementation relative to the specification.

                <c
                    id="__gsn__17ed0a84fb2"
                    color="#ffffff"
                    name="[adequately correct]">
                  Having been verified on the specification, the extent to which they hold is sufficient for the contract guarantees they imply to hold on the implementation.
                </c>

                <m
                    id="__gsn__17702c7d69b"
                    color="#ffffff"
                    name="Properties Verified Against Formal Specification">
                  The {formal specification} {adequately verifies} a set of {invariant properties} of the software module.

                  <c
                      id="__gsn__17dbac637c0"
                      color="#ffffff"
                      name="Module">
                    3-oap-correctness-specification.gsn
                  </c>
                </m>

                <m
                    id="__gsn__17ebc829b8b"
                    color="#ffffff"
                    name="Adequately Correct and Complete Implementation of Specification">
                  The implementation of the formal specification is such that the properties verified on the formal specification remain {adequately correct} on the source code implementation.

                  <c
                      id="__gsn__17dbad3a5c4"
                      color="#ffffff"
                      name="Module">
                    3-OAP-correctness-implementation.gsn
                  </c>
                </m>
              </s>
            </g>

            <g
                id="__gsn__17ebc91eda3"
                color="#ffffff"
                name="Direct Verified Properties">
              A subset of properties are adequately directly verified on the source code.

              <s
                  id="__gsn__17ebdaf294b"
                  color="#ffffff"
                  name="Strategy">
                By arguing that the tests are adequate and pass.

                <j
                    id="__gsn__17ec0cca6cf"
                    color="#ffffff"
                    name="Justification">
                  We currently expect most users will utilize testing. In order to have complete data without working on more V and V techniques, we assume testing for now
                </j>

                <g
                    id="__gsn__17ecb296f3d"
                    color="#ffffff"
                    name="Source Code Testing">
                  Properties are directly determined by teseting against the source code implementation.

                  <a
                      id="__gsn__17ecb2a698e"
                      color="#ffffff"
                      name="Assumption">
                    Appropriate OS/Hardware/Environment(s) for target systems.
                  </a>

                  <a
                      id="__gsn__17ecb2a6b7e"
                      color="#ffffff"
                      name="Assumption">
                    Appropriate source code application tools (compilers, interpreters, etc.)
                  </a>

                  <g
                      id="__gsn__17ebdaf294c"
                      color="#ffffff"
                      name="Tests are Adequate">
                    The tests of the formal specification are {adequate} to determine specification satisfaction of the guarantees verified.

                    <c
                        id="__gsn__17ebdaf294d"
                        color="#ffffff"
                        name="[adequate]">
                      Adequacy is assessed as the tests correctly testing the intended property of the specification over the intended set of inputs.
                    </c>

                    <e
                        id="__gsn__17ebdaf294e"
                        color="#ffffff"
                        name="Peer Review">
                      The team reviews all tests written against animation/execution of the formal specification for capturing the correct intended property to test and accurately determining it against the specification over the intended input set. See "evidence-fre.xlsx!Contract Verification#Source Code Test Review Sign-Off"
                    </e>

                    <e
                        id="__gsn__17ed031fbec"
                        color="#ffffff"
                        name="Inspection">
                      Reader can inspect the test.See "evidence-fre.xlsx!Contract Verification#Source Code Test"
                    </e>
                  </g>

                  <g
                      id="__gsn__17ebdaf294f"
                      color="#ffffff"
                      name="Tests Pass">
                    All tests used to verify contract guarantees pass. See

                    <e
                        id="__gsn__17ed02f8a39"
                        color="#ffffff"
                        name="Test Pass">
                      Indication that all tests have passed based on their output. See "evidence-fre.xlsx!Contract Verification#Source Code Test Passes"
                    </e>

                    <e
                        id="__gsn__17ebdaf2950"
                        color="#ffffff"
                        name="Test Log">
                      Log of all test executions/animations with sufficient status information. See "evidence-fre.xlsx!Contract Verification#Source Code Test Log"
                    </e>
                  </g>
                </g>

                <m
                    id="__gsn__17ec5c4f684"
                    color="#cdcdcd"
                    optional="true"
                    name="Microstandard: Source Code V and V">
                  A Microstandard for general V and V techniques.

                  <comment
                      id="__gsn__17ed0334c18"
                      color="#ffffff"
                      name="Note">
                    Could be improved with deeper testing microstandard or other v and v techniques as indicated by this optional microstandard placeholder.
                  </comment>
                </m>
              </s>

              <comment
                  id="__gsn__17ec5d8da12"
                  color="#ffffff"
                  name="Comment">
                PUT GUIDANCE MATERIAL THAT SOME OF THIS TESTING SHOULD HAPPEN EARLY TO FIND ERRORS IN SPECIFICATION CHEAPLY BEFORE EXPENSIVE PROOF WORK IS DONE. CITE GALOIS PEOPLE.
              </comment>
            </g>

            <comment
                id="__gsn__17ec0bbf53b"
                color="#ffffff"
                name="Comment">
              Standard could be extended to address overlap in the two sets bolstering {adequate assurance}. For now, one should only argue in the one of the two sets where the assurance is sufficient.
            </comment>
          </s>
        </g>
      </s>
    </g>
  </gsn>
</argument>
